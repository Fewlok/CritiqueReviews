{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nconst useFetch = url => {\n  _s();\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const abortCont = new AbortController();\n    const fetchData = async () => {\n      try {\n        const response = await fetch(url, {\n          signal: abortCont.signal,\n          headers: {\n            \"auth-token\": JSON.parse(localStorage.getItem(\"user\")).token\n          }\n        });\n        if (!response.ok) {\n          throw new Error('Could not fetch the data for that resource');\n        }\n        const responseData = await response.json();\n        setData(responseData);\n        setIsPending(false);\n        setError(null);\n      } catch (err) {\n        if (err.name === 'AbortError') {\n          console.log('Fetch aborted');\n        } else {\n          setIsPending(false);\n          setError(err.message);\n        }\n      }\n    };\n    fetchData();\n    return () => abortCont.abort();\n  }, [url]);\n  return {\n    data,\n    isPending,\n    error\n  };\n};\n_s(useFetch, \"VxPkICXS4AfkXU1R8tuEJAA8e58=\");\nexport default useFetch;","map":{"version":3,"names":["useState","useEffect","useFetch","url","data","setData","isPending","setIsPending","error","setError","abortCont","AbortController","fetchData","response","fetch","signal","headers","JSON","parse","localStorage","getItem","token","ok","Error","responseData","json","err","name","console","log","message","abort"],"sources":["E:/BlogProj - Copy - Copy/blogproj/frontend/src/pages/useFetch.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nconst useFetch = (url) => {\r\n  const [data, setData] = useState(null);\r\n  const [isPending, setIsPending] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const abortCont = new AbortController();\r\n\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch(url, { signal: abortCont.signal, headers: {\r\n          \"auth-token\": JSON.parse(localStorage.getItem(\"user\")).token\r\n        } });\r\n\r\n        if (!response.ok) {\r\n          throw new Error('Could not fetch the data for that resource');\r\n        }\r\n\r\n        const responseData = await response.json();\r\n        setData(responseData);\r\n        setIsPending(false);\r\n        setError(null);\r\n      } catch (err) {\r\n        if (err.name === 'AbortError') {\r\n          console.log('Fetch aborted');\r\n        } else {\r\n          setIsPending(false);\r\n          setError(err.message);\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n\r\n    return () => abortCont.abort();\r\n  }, [url]);\r\n\r\n  return { data, isPending, error };\r\n};\r\n\r\nexport default useFetch;"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,QAAQ,GAAIC,GAAG,IAAK;EAAA;EACxB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMS,SAAS,GAAG,IAAIC,eAAe,EAAE;IAEvC,MAAMC,SAAS,GAAG,YAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACX,GAAG,EAAE;UAAEY,MAAM,EAAEL,SAAS,CAACK,MAAM;UAAEC,OAAO,EAAE;YACrE,YAAY,EAAEC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,CAACC;UACzD;QAAE,CAAC,CAAC;QAEJ,IAAI,CAACR,QAAQ,CAACS,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,4CAA4C,CAAC;QAC/D;QAEA,MAAMC,YAAY,GAAG,MAAMX,QAAQ,CAACY,IAAI,EAAE;QAC1CpB,OAAO,CAACmB,YAAY,CAAC;QACrBjB,YAAY,CAAC,KAAK,CAAC;QACnBE,QAAQ,CAAC,IAAI,CAAC;MAChB,CAAC,CAAC,OAAOiB,GAAG,EAAE;QACZ,IAAIA,GAAG,CAACC,IAAI,KAAK,YAAY,EAAE;UAC7BC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;QAC9B,CAAC,MAAM;UACLtB,YAAY,CAAC,KAAK,CAAC;UACnBE,QAAQ,CAACiB,GAAG,CAACI,OAAO,CAAC;QACvB;MACF;IACF,CAAC;IAEDlB,SAAS,EAAE;IAEX,OAAO,MAAMF,SAAS,CAACqB,KAAK,EAAE;EAChC,CAAC,EAAE,CAAC5B,GAAG,CAAC,CAAC;EAET,OAAO;IAAEC,IAAI;IAAEE,SAAS;IAAEE;EAAM,CAAC;AACnC,CAAC;AAAC,GAtCIN,QAAQ;AAwCd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}