{"ast":null,"code":"var _s = $RefreshSig$();\n//Point of js file:\n//creates a React hook called \"useFetch\" that allows a user to fetch data from a specified URL. This hook uses the React Hooks \"useState\" and \"useEffect\" to handle the state of the request (data, loading status, and error state). The hook takes one argument, which is the URL that data is fetched from. It returns an object containing the data, a boolean indicating whether the request is pending, and an error message if one occurred. The useEffect hook is used to fetch the data from the passed in url and update the state accordingly. Additionally, the code uses setTimeout to delay the fetch call by 1 sec.\nimport { useState, useEffect } from 'react';\nconst useFetch = url => {\n  _s();\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const abortCont = new AbortController();\n    setTimeout(() => {\n      fetch(url, {\n        signal: abortCont.signal\n      }).then(res => {\n        if (!res.ok) {\n          throw Error('could not fetch the data for that resource');\n        }\n        return res.json();\n      }).then(data => {\n        setData(data);\n        setIsPending(false);\n        setError(null);\n      }).catch(err => {\n        if (err.name === 'AbortError') {\n          console.log('fetch aborted');\n        } else {\n          setIsPending(false);\n          setError(err.message);\n        }\n      });\n    }, 1000);\n    return () => abortCont.abort();\n  }, [url]);\n  return {\n    data,\n    isPending,\n    error\n  };\n};\n_s(useFetch, \"VxPkICXS4AfkXU1R8tuEJAA8e58=\");\nexport default useFetch;","map":{"version":3,"names":["useState","useEffect","useFetch","url","data","setData","isPending","setIsPending","error","setError","abortCont","AbortController","setTimeout","fetch","signal","then","res","ok","Error","json","catch","err","name","console","log","message","abort"],"sources":["E:/BlogProj - Copy - Copy/blogproj/frontend/src/pages/useFetch.js"],"sourcesContent":["//Point of js file:\r\n//creates a React hook called \"useFetch\" that allows a user to fetch data from a specified URL. This hook uses the React Hooks \"useState\" and \"useEffect\" to handle the state of the request (data, loading status, and error state). The hook takes one argument, which is the URL that data is fetched from. It returns an object containing the data, a boolean indicating whether the request is pending, and an error message if one occurred. The useEffect hook is used to fetch the data from the passed in url and update the state accordingly. Additionally, the code uses setTimeout to delay the fetch call by 1 sec.\r\nimport { useState, useEffect} from 'react';\r\n\r\nconst useFetch = (url) => {\r\n const [data, setData] = useState(null);\r\n const [isPending, setIsPending] = useState(true);\r\n const [error, setError] = useState(null);\r\n\r\n useEffect (() => {\r\n  const abortCont = new AbortController();\r\n\r\n   setTimeout(() => {\r\n    fetch(url, { signal: abortCont.signal })\r\n      .then(res => {\r\n        if(!res.ok) {\r\n          throw Error('could not fetch the data for that resource');\r\n        }\r\n        return res.json();\r\n      })\r\n      .then (data => {\r\n        setData(data);\r\n        setIsPending (false);\r\n        setError(null);\r\n      })\r\n      .catch(err => {\r\n        if (err.name === 'AbortError') {\r\n          console.log('fetch aborted');\r\n        } else{\r\n        setIsPending (false);\r\n        setError(err.message);\r\n        }\r\n      })\r\n  }, 1000);\r\n  return () => abortCont.abort();\r\n }, [url]);\r\n\r\n return { data, isPending, error }\r\n}\r\n\r\nexport default useFetch;"],"mappings":";AAAA;AACA;AACA,SAASA,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAE1C,MAAMC,QAAQ,GAAIC,GAAG,IAAK;EAAA;EACzB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAE,MAAM;IAChB,MAAMS,SAAS,GAAG,IAAIC,eAAe,EAAE;IAEtCC,UAAU,CAAC,MAAM;MAChBC,KAAK,CAACV,GAAG,EAAE;QAAEW,MAAM,EAAEJ,SAAS,CAACI;MAAO,CAAC,CAAC,CACrCC,IAAI,CAACC,GAAG,IAAI;QACX,IAAG,CAACA,GAAG,CAACC,EAAE,EAAE;UACV,MAAMC,KAAK,CAAC,4CAA4C,CAAC;QAC3D;QACA,OAAOF,GAAG,CAACG,IAAI,EAAE;MACnB,CAAC,CAAC,CACDJ,IAAI,CAAEX,IAAI,IAAI;QACbC,OAAO,CAACD,IAAI,CAAC;QACbG,YAAY,CAAE,KAAK,CAAC;QACpBE,QAAQ,CAAC,IAAI,CAAC;MAChB,CAAC,CAAC,CACDW,KAAK,CAACC,GAAG,IAAI;QACZ,IAAIA,GAAG,CAACC,IAAI,KAAK,YAAY,EAAE;UAC7BC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;QAC9B,CAAC,MAAK;UACNjB,YAAY,CAAE,KAAK,CAAC;UACpBE,QAAQ,CAACY,GAAG,CAACI,OAAO,CAAC;QACrB;MACF,CAAC,CAAC;IACN,CAAC,EAAE,IAAI,CAAC;IACR,OAAO,MAAMf,SAAS,CAACgB,KAAK,EAAE;EAC/B,CAAC,EAAE,CAACvB,GAAG,CAAC,CAAC;EAET,OAAO;IAAEC,IAAI;IAAEE,SAAS;IAAEE;EAAM,CAAC;AAClC,CAAC;AAAA,GAlCKN,QAAQ;AAoCd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}