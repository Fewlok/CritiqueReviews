{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nconst useFetch = function (url) {\n  _s();\n  let id = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const abortCont = new AbortController();\n    let fetchUrl = url;\n    if (id) {\n      fetchUrl = `${url}/${id}`;\n    }\n    fetch(fetchUrl, {\n      signal: abortCont.signal\n    }).then(res => {\n      if (!res.ok) {\n        throw Error('Could not fetch the data for that resource');\n      }\n      return res.json();\n    }).then(data => {\n      setData(data);\n      setIsPending(false);\n      setError(null);\n    }).catch(err => {\n      if (err.name === 'AbortError') {\n        console.log('Fetch aborted');\n      } else {\n        setIsPending(false);\n        setError(err.message);\n      }\n    });\n    return () => abortCont.abort();\n  }, [url, id]);\n  return {\n    data,\n    isPending,\n    error\n  };\n};\n_s(useFetch, \"VxPkICXS4AfkXU1R8tuEJAA8e58=\");\nexport default useFetch;","map":{"version":3,"names":["useState","useEffect","useFetch","url","id","data","setData","isPending","setIsPending","error","setError","abortCont","AbortController","fetchUrl","fetch","signal","then","res","ok","Error","json","catch","err","name","console","log","message","abort"],"sources":["E:/BlogProj - Copy - Copy/blogproj/frontend/src/pages/useFetch.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nconst useFetch = (url, id = null) => {\r\n  const [data, setData] = useState(null);\r\n  const [isPending, setIsPending] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const abortCont = new AbortController();\r\n\r\n    let fetchUrl = url;\r\n    if (id) {\r\n      fetchUrl = `${url}/${id}`;\r\n    }\r\n\r\n    fetch(fetchUrl, { signal: abortCont.signal })\r\n      .then(res => {\r\n        if (!res.ok) {\r\n          throw Error('Could not fetch the data for that resource');\r\n        }\r\n        return res.json();\r\n      })\r\n      .then(data => {\r\n        setData(data);\r\n        setIsPending(false);\r\n        setError(null);\r\n      })\r\n      .catch(err => {\r\n        if (err.name === 'AbortError') {\r\n          console.log('Fetch aborted');\r\n        } else {\r\n          setIsPending(false);\r\n          setError(err.message);\r\n        }\r\n      });\r\n\r\n    return () => abortCont.abort();\r\n  }, [url, id]);\r\n\r\n  return { data, isPending, error };\r\n};\r\n\r\nexport default useFetch;\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,QAAQ,GAAG,UAACC,GAAG,EAAgB;EAAA;EAAA,IAAdC,EAAE,uEAAG,IAAI;EAC9B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMU,SAAS,GAAG,IAAIC,eAAe,EAAE;IAEvC,IAAIC,QAAQ,GAAGV,GAAG;IAClB,IAAIC,EAAE,EAAE;MACNS,QAAQ,GAAI,GAAEV,GAAI,IAAGC,EAAG,EAAC;IAC3B;IAEAU,KAAK,CAACD,QAAQ,EAAE;MAAEE,MAAM,EAAEJ,SAAS,CAACI;IAAO,CAAC,CAAC,CAC1CC,IAAI,CAACC,GAAG,IAAI;MACX,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE;QACX,MAAMC,KAAK,CAAC,4CAA4C,CAAC;MAC3D;MACA,OAAOF,GAAG,CAACG,IAAI,EAAE;IACnB,CAAC,CAAC,CACDJ,IAAI,CAACX,IAAI,IAAI;MACZC,OAAO,CAACD,IAAI,CAAC;MACbG,YAAY,CAAC,KAAK,CAAC;MACnBE,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,CAAC,CACDW,KAAK,CAACC,GAAG,IAAI;MACZ,IAAIA,GAAG,CAACC,IAAI,KAAK,YAAY,EAAE;QAC7BC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;MAC9B,CAAC,MAAM;QACLjB,YAAY,CAAC,KAAK,CAAC;QACnBE,QAAQ,CAACY,GAAG,CAACI,OAAO,CAAC;MACvB;IACF,CAAC,CAAC;IAEJ,OAAO,MAAMf,SAAS,CAACgB,KAAK,EAAE;EAChC,CAAC,EAAE,CAACxB,GAAG,EAAEC,EAAE,CAAC,CAAC;EAEb,OAAO;IAAEC,IAAI;IAAEE,SAAS;IAAEE;EAAM,CAAC;AACnC,CAAC;AAAC,GAtCIP,QAAQ;AAwCd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}